{"version":3,"sources":["upload.min.js"],"names":["e","exports","module","define","amd","f","window","global","self","Upload","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"options","this","settings","trigger","name","action","accept","data","multiple","change","error","success","progress","extension","compress","$","extend","setup","bind","createInputs","inputs","document","createElement","type","value","push","findzIndex","$node","parents","parentsUntil","zIndex","item","eq","css","parseInt","newIframe","iframeName","iframeCount","iframe","hide","ES6Promise","polyfill","TIME","prototype","form","append","input","setAttribute","$trigger","attr","position","top","right","opacity","outline","cursor","height","outerHeight","fontSize","Math","max","offset","left","overflow","width","outerWidth","appendTo","mouseenter","bindInput","files","target","split","pop","extensionArr","map","trim","inArray","submit","refreshInput","FormData","ajaxSubmit","formSubmit","prop","get","promiseArr","each","index","file","promise","err","message","then","blob","Promise","resolve","ajax","url","processData","contentType","timeout","xhr","ajaxSettings","upload","addEventListener","event","percent","loaded","total","lengthComputable","ceil","textStatus","all","timer","one","clearTimeout","remove","response","contents","find","html","setTimeout","newInput","clone","before","off","callback","./compress",2,"File","FileReader","URL","test","reader","readAsArrayBuffer","onload","Blob","result","webkitURL","blobURL","createObjectURL","image","Image","src","dataURI","resize","dataURItoBlob","reject","img","max_width","max_height","quality","round","canvas","ctx","getContext","drawImage","toDataURL","byteString","indexOf","atob","unescape","mimeString","ia","Uint8Array","charCodeAt"],"mappings":"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","file":"upload.min.js","sourcesContent":["!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.Upload=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global){\n/*\n * Base on arale/upload\n * error message: 'extension error/compress error: xxxx/upload error: xxxx'\n * error will call settings.error function\n * extension error will only stop uploading current file, if multiple is valid, other files will be continue to upload\n * Compress error only do not compress, do not stop uploading\n */\n\n'use strict'\n\nvar ES6Promise = (typeof window !== \"undefined\" ? window.ES6Promise : typeof global !== \"undefined\" ? global.ES6Promise : null)\nvar compress = require('./compress')\n\nES6Promise.polyfill()\nvar iframeCount = 0\nvar TIME = 10000\n\n/**\n * Upload constructor\n * @param {Object} options config\n */\nfunction Upload(options) {\n    if (!(this instanceof Upload)) {\n        return new Upload(options)\n    }\n    if (typeof options !== 'object') {\n        options = {}\n    }\n    var settings = {\n        trigger: null,\n        name: 'file',\n        action: '/upload',\n        accept: null,\n        data: null,\n        multiple: true,\n        change: null,\n        error: null,\n        success: null,\n        progress: null,\n        extension: null,\n        compress: null\n    }\n    $.extend(settings, options)\n    this.settings = settings\n\n    this.setup()\n    this.bind()\n}\n\n/**\n * init hidden form contains hidden input(settings.data) and file input\n */\nUpload.prototype.setup = function () {\n    this.form = $(\n        '<form method=\"post\" enctype=\"multipart/form-data\"'\n        + 'target=\"\" action=\"' + this.settings.action + '\" />'\n    )\n\n    var data = this.settings.data\n    this.form.append(createInputs(data))\n\n    var input = document.createElement('input')\n    input.type = 'file'\n    input.name = this.settings.name\n    if (this.settings.accept) {\n        input.accept = this.settings.accept\n    }\n    if (this.settings.multiple) {\n        input.multiple = true\n        input.setAttribute('multiple', 'multiple')\n    }\n    this.input = $(input)\n\n    var $trigger = $(this.settings.trigger)\n    this.input.attr('hidefocus', true).css({\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        opacity: 0,\n        outline: 0,\n        cursor: 'pointer',\n        height: $trigger.outerHeight(),\n        fontSize: Math.max(64, $trigger.outerHeight() * 5)\n    })\n    this.form.append(this.input)\n    this.form.css({\n        position: 'absolute',\n        top: $trigger.offset().top,\n        left: $trigger.offset().left,\n        overflow: 'hidden',\n        width: $trigger.outerWidth(),\n        height: $trigger.outerHeight(),\n        zIndex: findzIndex($trigger) + 10\n    }).appendTo('body')\n}\n\n/**\n * bind the trigger element to hidden form\n */\nUpload.prototype.bind = function () {\n    var self = this\n    var $trigger = $(self.settings.trigger)\n    $trigger.mouseenter(function () {\n        self.form.css({\n            top: $trigger.offset().top,\n            left: $trigger.offset().left,\n            width: $trigger.outerWidth(),\n            height: $trigger.outerHeight()\n        })\n    })\n    self.bindInput()\n}\n\n/**\n * handle file input change event\n * it will be filtered via extension\n */\nUpload.prototype.bindInput = function () {\n    var self = this\n    self.files = []\n    self.input.change(function(e) {\n        self.files = []\n\n        // ie9- don't support FileList Object\n        var files = this.files || [{\n            name: e.target.value.split('\\\\').pop()\n        }]\n\n        // filter via extension\n        if (self.settings.extension) {\n            var extensionArr = self.settings.extension.split(',')\n            extensionArr = $.map(extensionArr, function (value, key) {\n                return $.trim(value)\n            })\n            for (var i = 0; i < files.length; i++) {\n                if ($.inArray(files[i].name.split('.').pop(), extensionArr) !== -1) {\n                    self.files.push(files[i])\n                } else {\n                    if (self.settings.error) {\n                        self.settings.error(new Error('extension error'), files[i].name)\n                    }\n                }\n            }\n        }\n\n        // no accept extension\n        if (!self.files.length) {\n            self.refreshInput()\n            return\n        }\n        if (self.settings.change) {\n            self.settings.change.call(self, self.files)\n        } else {\n            self.submit()\n        }\n    })\n}\n\n/**\n * upload file to serevr\n * use ajax or form\n */\nUpload.prototype.submit = function () {\n    if (window.FormData) {\n        this.ajaxSubmit()\n    } else {\n        this.formSubmit()\n    }\n}\n\n/**\n * upload file by ajax\n * it will be compressed\n * success or error will trigger callback function\n */\nUpload.prototype.ajaxSubmit = function () {\n    var self = this\n\n    // upyun server do not support multiple files upload\n    var files = self.files\n    self.input.prop('disabled', true)\n    var form = new FormData(self.form.get(0))\n    self.input.prop('disabled', false)\n\n    var promiseArr = []\n    $.each(files, function (index, file) {\n        var promise = compress(file, self.settings.compress)['catch'](function (err) {\n\n            // compress failed\n            if (self.settings.error) {\n                self.settings.error(new Error('compress error: ' + err.message), file.name)\n            }\n        }).then(function (blob) {\n            blob = blob || file\n            form.append(self.settings.name, blob, file.name)\n            return new Promise(function (resolve, reject) {\n                $.ajax({\n                    url: self.settings.action,\n                    type: 'post',\n                    processData: false,\n                    contentType: false,\n                    data: form,\n                    timeout: TIME,\n                    xhr: function () {\n                        var xhr = $.ajaxSettings.xhr()\n                        if (xhr.upload && self.settings.progress) {\n                            xhr.upload.addEventListener('progress', function(event) {\n                                var percent = 0\n                                var position = event.loaded || event.position\n                                var total = event.total\n                                if (event.lengthComputable) {\n                                    percent = Math.ceil(position / total * 100)\n                                }\n                                self.settings.progress(event, position, total, percent, file.name)\n                            }, false)\n                        }\n                        return xhr\n                    },\n                    success: function (data) {\n                        if (self.settings.success) {\n                            self.settings.success(data, file.name)\n                        }\n                        resolve()\n                    },\n                    error: function (xhr, textStatus) {\n                        if (self.settings.error) {\n                            self.settings.error(new Error('upload error: ' + textStatus), file.name)\n                        }\n                        resolve()\n                    }\n                })\n            })\n        })\n        promiseArr.push(promise)\n    })\n\n    // upload finished then refresh\n    Promise.all(promiseArr).then(function () {\n        self.refreshInput()\n    })\n}\n\n/**\n * upload file by form submit\n * success or error will trigger callback function\n */\nUpload.prototype.formSubmit = function () {\n    var self = this\n    self.iframe = newIframe()\n    self.form.attr('target', self.iframe.attr('name'))\n    self.iframe.data('fileName', self.files[0].name)\n    $('body').append(self.iframe)\n    var timer = null\n    self.iframe.one('load', function () {\n        clearTimeout(timer)\n\n        // Fix for IE endless progress bar activity bug\n        // (happens on form submits to iframe targets):\n        $('<iframe src=\"javascript:false;\"></iframe>')\n            .appendTo(self.form)\n            .remove()\n        var response = null\n        try {\n            response = $.trim($(this).contents().find(\"body\").html())\n        } catch (e) {\n            if (self.settings.error) {\n                self.settings.error(new Error('upload error: cross domain'), $(this).data('fileName'))\n            }\n        } finally {\n            if (response !== null && self.settings.success) {\n                self.settings.success(response, $(this).data('fileName'))\n            }\n\n            // upload finished then refresh\n            self.refreshInput()\n            self.iframe.remove()\n        }\n    })\n    self.form.submit()\n    timer = setTimeout(function () {\n        if (self.settings.error) {\n            self.settings.error(new Error('upload error: timeout'), $(this).data('fileName'))\n        }\n\n        // upload finished then refresh\n        self.refreshInput()\n        self.iframe.remove()\n    }, TIME)\n}\n\n/**\n * replace the input element\n * or the same file can not to be uploaded\n */\nUpload.prototype.refreshInput = function () {\n    var newInput = this.input.clone()\n    this.input.before(newInput)\n    this.input.off('change')\n    this.input.remove()\n    this.input = newInput\n    this.bindInput()\n}\n\n/**\n * set settings.change\n * @param  {Function} callback override settings.change\n * @return {Object}            upload object\n */\nUpload.prototype.change = function(callback) {\n    if (!callback) {\n        return this\n    }\n    this.settings.change = callback\n    return this\n}\n\n/**\n * set settings.success\n * @param  {Function} callback override settings.success\n * @return {Object}            upload object\n */\nUpload.prototype.success = function(callback) {\n    if (!callback) {\n        return this\n    }\n    this.settings.success = callback\n    return this\n}\n\n/**\n * set settings.error\n * @param  {Function} callback override settings.error\n * @return {Object}            upload object\n */\nUpload.prototype.error = function(callback) {\n    if (!callback) {\n        return this\n    }\n    this.settings.error = callback\n    return this\n}\n\n/**\n * set settings.progress\n * @param  {Function} callback override settings.progress\n * @return {Object}            upload object\n */\nUpload.prototype.progress = function(callback) {\n    if (!callback) {\n        return this\n    }\n    this.settings.progress = callback\n    return this\n}\n\n/**\n * create hidden input for data\n * @param  {Object} data settings.data\n * @return {Array}       array of hidden input\n */\nfunction createInputs(data) {\n    if (!data) return []\n    var inputs = [], i\n    for (var name in data) {\n        i = document.createElement('input')\n        i.type = 'hidden'\n        i.name = name\n        i.value = data[name]\n        inputs.push(i)\n    }\n    return inputs\n}\n\n/**\n * find the parents\n * @param  {jQueryElement} $node\n * @return {number}               parents max zIndex + 10\n */\nfunction findzIndex($node) {\n    var parents = $node.parentsUntil('body')\n    var zIndex = 0\n    for (var i = 0; i < parents.length; i++) {\n        var item = parents.eq(i)\n        if (item.css('position') !== 'static') {\n            zIndex = parseInt(item.css('zIndex'), 10) || zIndex\n        }\n    }\n    return zIndex\n}\n\n/**\n * init iframe when trigger form submit\n * @return {jQueryElement} iframe element of jQuery\n */\nfunction newIframe() {\n    var iframeName = 'iframe-Upload-' + iframeCount\n    var iframe = $('<iframe name=\"' + iframeName + '\" />').hide()\n    iframeCount += 1\n    return iframe\n}\n\nmodule.exports = Upload\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./compress\":2}],2:[function(require,module,exports){\n(function (global){\n'use strict'\n\nvar ES6Promise = (typeof window !== \"undefined\" ? window.ES6Promise : typeof global !== \"undefined\" ? global.ES6Promise : null)\nES6Promise.polyfill()\n\n/**\n * compress (now only support image)\n * @param  {File}    file\n * @param  {object}  options {max_width, max_height, quality}\n * @return {Promise}\n */\nfunction compress(file, options) {\n\n    // do not need to compress\n    if (options === false) {\n        return Promise.resolve(file)\n    }\n\n    // check File API support\n    if (!window.File || !window.FileReader || !window.URL) {\n        return Promise.reject(new Error('File API not support'))\n    }\n\n    // check file param\n    if (!(file instanceof File)) {\n        return Promise.reject(new Error('file invalid'))\n    }\n\n    // can not compress\n    if (!(/image/i).test(file.type)) {\n        return Promise.reject(new Error('file is not image'))\n    }\n    if (typeof options !== 'object') {\n        options = {}\n    }\n    return new Promise(function (resolve, reject) {\n\n        // read the files\n        var reader = new FileReader()\n        reader.readAsArrayBuffer(file)\n        reader.onload = function (event) {\n\n            // blob stuff\n            var blob = new Blob([event.target.result])\n            window.URL = window.URL || window.webkitURL\n            var blobURL = window.URL.createObjectURL(blob)\n\n            // helper Image object\n            var image = new Image()\n            image.src = blobURL\n            image.onload = function() {\n\n                // send it to canvas\n                var dataURI = resize(image, file.type, options)\n                var blob = dataURItoBlob(dataURI)\n                resolve(blob)\n            }\n        }\n    })\n}\n\n/**\n * resize Image through canvas\n * @param  {Image}  img      DOM Element\n * @param  {string} type     MIME-STRING\n * @param  {number} options  {max_width, max_height, quality}\n * @return {string}          base64/URLEncoded data\n */\nfunction resize(img, type, options) {\n    var width = img.width\n    var height = img.height\n    var max_width = options.max_width || width\n    var max_height = options.max_height || height\n    var quality = options.quality || 0.7\n\n    // calculate the width and height, constraining the proportions\n    if (width > height) {\n        if (width > max_width) {\n            height = Math.round(height *= max_width / width)\n            width = max_width\n        }\n    } else {\n        if (height > max_height) {\n            width = Math.round(width *= max_height / height)\n            height = max_height\n        }\n    }\n\n    // resize the canvas and draw the image data into it\n    var canvas = document.createElement('canvas')\n    canvas.width = width\n    canvas.height = height\n    var ctx = canvas.getContext(\"2d\")\n    ctx.drawImage(img, 0, 0, width, height)\n    return canvas.toDataURL(type, quality)\n}\n\n/**\n * convert base64/URLEncoded data component to raw binary data held in a string\n * @param  {string} dataURI base64/URLEncoded data\n * @return {string}         raw binary data\n */\nfunction dataURItoBlob(dataURI) {\n    var byteString = ''\n    if (dataURI.split(',')[0].indexOf('base64') >= 0) {\n        byteString = atob(dataURI.split(',')[1])\n    }\n    else {\n        byteString = unescape(dataURI.split(',')[1])\n    }\n\n    // separate out the mime component\n    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]\n\n    // write the bytes of the string to a typed array\n    var ia = new Uint8Array(byteString.length)\n    for (var i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i)\n    }\n    return new Blob([ia], {type: mimeString})\n}\n\nmodule.exports = compress\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}]},{},[1])(1)\n});"],"sourceRoot":"/source/"}